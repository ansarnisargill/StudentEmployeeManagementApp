@page
@model CRUDDemoModel
@{
ViewData["Title"] = "Home page";
}


<link href="~/css/Calendar.css" rel="stylesheet" type="text/css" />
<div class="col-4 offset-4 text-center" id="spinner" style="display:none;">
    <div class="sp sp-3balls"></div>
</div>
<div id='crudcalendar' class="">

</div>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modelBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary " data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>




<script>
    // Please see documentation at https://docs.microsoft.com/aspnet/core/client-side/bundling-and-minification
    // for details on configuring this project to bundle and minify static web assets.

    // Write your Javascript code.

    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('crudcalendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',
            plugins: ['interaction', 'dayGrid', 'timeGrid', 'resourceTimeline'],
            now: '@DateTime.Now.ToString("yyyy-MM-dd")',
            editable: true,
            eventResize: function (info) {
                document.getElementById("spinner").style.display = "block";
                EditRequest(`/api/bookings/${info.event.id}`, {
                    "startDate": info.event.start.toISOString(),
                    "endDate": info.event.end.toISOString(),
                    "Id": info.event.id
                }).then(x => alert("Event Updated!"));
                document.getElementById("spinner").style.display = "none";

            },
            eventClick: function (info) {
                GetData(`/api/bookings/${info.event.id}`).then(response => ShowModel(response));
            },
            eventDrop: function (info) {
                if (info.newResource) {
                    EditRequest(`/api/bookings/${info.event.id}`, {
                        "startDate": info.event.start.toISOString(),
                        "endDate": info.event.end.toISOString(),
                        "Id": info.event.id,
                        "ToolId": info.newResource.id
                    }).then(x => alert("Event Updated!"));

                }

            },
            //now: $nowDate,
            locale: "us-US",
            nowIndicator: true,
            aspectRatio: 1.2,
            //height: 300,
            navLinks: true,
            displayEventTime: false,
            scrollTime: '00:00',
            firstDay: 1, //monday
            weekNumbers: true,
            header: {
                left: 'today prev,next',
                center: 'title',
                right: 'timelinePeriod,resourceTimelineDay,resourceTimelineThisMonths,timeGridWeek'
            },
            //defaultView: 'resourceTimelineDay',
            defaultView: 'resourceTimelineThisMonths',
            views: {
                resourceTimelineThisMonths: {
                    type: 'resourceTimeline',
                    duration: {
                        days: @Model.DaysInMonth
                    },
                    buttonText: 'Month'
                },
                timelinePeriod: {
                    type: "timeline",
                    buttonText: "periode",
                    slotLabelFormat: ["MMMM", "D", "dd"],
                }
            },
            resourceAreaWidth: '15%',
            resourceColumns: [{
                    labelText: 'Tool',
                    field: 'title'
                },
                {
                    labelText: 'Status',
                    field: 'status'
                }
            ],
            resources: @Html.Raw(Model.Resources),
            events: @Html.Raw(Model.Bookings)
        });
        calendar.setOption('height', window.innerHeight - 100);

        calendar.render();
        bindClickEventToAllResources();
    });
</script>